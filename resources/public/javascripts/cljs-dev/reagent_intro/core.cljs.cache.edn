;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name reagent-intro.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core}, :uses nil, :defs {app-state {:name reagent-intro.core/app-state, :file "src/reagent_intro/core.cljs", :line 4, :column 1, :end-line 4, :end-column 15, :meta {:file "/home/nigel/reagent_intro/src/reagent_intro/core.cljs", :line 4, :column 6, :end-line 4, :end-column 15}}, header {:protocol-inline nil, :meta {:file "/home/nigel/reagent_intro/src/reagent_intro/core.cljs", :line 10, :column 7, :end-line 10, :end-column 13, :arglists (quote ([message]))}, :name reagent-intro.core/header, :variadic false, :file "src/reagent_intro/core.cljs", :end-column 13, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message]))}, items-list {:protocol-inline nil, :meta {:file "/home/nigel/reagent_intro/src/reagent_intro/core.cljs", :line 14, :column 7, :end-line 14, :end-column 17, :arglists (quote ([items]))}, :name reagent-intro.core/items-list, :variadic false, :file "src/reagent_intro/core.cljs", :end-column 17, :method-params ([items]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([items]))}, app {:protocol-inline nil, :meta {:file "/home/nigel/reagent_intro/src/reagent_intro/core.cljs", :line 21, :column 7, :end-line 21, :end-column 10, :arglists (quote ([]))}, :name reagent-intro.core/app, :variadic false, :file "src/reagent_intro/core.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:key :div :class :display :items :h1 :p :message}, :order [:message :items :display :div :h1 :class :p :key]}, :doc nil}